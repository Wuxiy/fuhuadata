<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
        "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="BUSINESSORDER">
    <typeAlias alias="BusinessOrder" type="com.fuhuadata.domain.BusinessOrder"/>
    <typeAlias alias="QueryBusinessOrder" type="com.fuhuadata.domain.query.QueryBusinessOrder"/>
    <typeAlias alias="CostAndProfitStatistics" type="com.fuhuadata.vo.CostAndProfitStatistics"/>

    <resultMap id="BUSINESSORDER-MAP" class="BusinessOrder">
        <result column="order_id" jdbcType="VARCHAR" property="orderId" javaType="java.lang.String"/>
        <result column="nc_order_id" jdbcType="VARCHAR" property="ncOrderId" javaType="java.lang.String"/>
        <result column="business_id" jdbcType="VARCHAR" property="businessId" javaType="java.lang.String"/>
        <result column="customer_id" jdbcType="INTEGER" property="customerId" javaType="java.lang.String"/>
        <result column="customer_duty_paragraph" jdbcType="VARCHAR" property="customerDutyParagraph" javaType="java.lang.String"/>
        <result column="bill_to_customer" jdbcType="VARCHAR" property="billToCustomer" javaType="java.lang.String"/>
        <result column="sales_man_id" jdbcType="VARCHAR" property="salesManId" javaType="java.lang.String"/>
        <result column="sales_man_name" jdbcType="VARCHAR" property="salesManName" javaType="java.lang.String"/>
        <result column="department_id" jdbcType="VARCHAR" property="departmentId" javaType="java.lang.String"/>
        <result property="departmentName" column="department_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="sale_organization_id" jdbcType="VARCHAR" property="saleOrganizationId" javaType="java.lang.String"/>
        <result column="sale_organization_name" jdbcType="VARCHAR" property="saleOrganizationName" javaType="java.lang.String"/>
        <result column="destination_port" jdbcType="VARCHAR" property="destinationPort" javaType="java.lang.String"/>
        <result column="shipment_port" jdbcType="VARCHAR" property="shipmentPort" javaType="java.lang.String"/>
        <result column="destination_port_name" jdbcType="VARCHAR" property="destinationPortName" javaType="java.lang.String"/>
        <result column="shipment_port_name" jdbcType="VARCHAR" property="shipmentPortName" javaType="java.lang.String"/>

        <result column="collection_agreement" jdbcType="VARCHAR" property="collectionAgreement" javaType="java.lang.String"/>
        <result column="trade_type" jdbcType="TINYINT" property="tradeType" javaType="java.lang.Integer"/>
        <result column="trade_term" jdbcType="VARCHAR" property="tradeTerm" javaType="java.lang.String"/>

        <result column="currency" jdbcType="VARCHAR" property="currency" javaType="java.lang.String"/>

        <result property="isCreditRisk" column="is_credit_risk" jdbcType="INT" javaType="java.lang.Integer"/>
        <result property="prepayRate" column="prepay_rate" jdbcType="DECIMAL" javaType="java.math.BigDecimal" nullValue="0"/>


        <result column="nusdexchgrate" jdbcType="DECIMAL" property="nusdexchgrate" javaType="java.math.BigDecimal" nullValue="0"/>
        <result column="nexchangerate" jdbcType="DECIMAL" property="nexchangerate" javaType="java.math.BigDecimal" nullValue="0"/>
        <result column="lastdelydate" jdbcType="TIMESTAMP" property="lastdelydate" javaType="java.sql.Timestamp"/>
        <result column="trade_country_name" jdbcType="VARCHAR" property="tradeCountryName" javaType="java.lang.String"/>
        <result column="trade_country" jdbcType="VARCHAR" property="tradeCountry" javaType="java.lang.String"/>
        <result column="premium_rate" jdbcType="DECIMAL" property="premiumRate" javaType="java.math.BigDecimal" nullValue="0"/>
        <result column="guarantee_rate" jdbcType="DECIMAL" property="guaranteeRate" javaType="java.math.BigDecimal" nullValue="0"/>
        <result column="discount_rate" jdbcType="DECIMAL" property="discountRate" javaType="java.math.BigDecimal" nullValue="0"/>
        <result column="loss_rate" jdbcType="DECIMAL" property="lossRate" javaType="java.math.BigDecimal" nullValue="0"/>
        <result column="sale_rate" jdbcType="DECIMAL" property="saleRate" javaType="java.math.BigDecimal" nullValue="0"/>
        <result column="management_rate" jdbcType="DECIMAL" property="managementRate" javaType="java.math.BigDecimal" nullValue="0"/>
        <result column="gross_rate" jdbcType="DECIMAL" property="grossRate" javaType="java.math.BigDecimal" nullValue="0"/>
        <result column="credit_rate" jdbcType="DECIMAL" property="creditRate" javaType="java.math.BigDecimal" nullValue="0"/>
        <result column="transport_flag" jdbcType="TINYINT" property="transportFlag" javaType="java.lang.Integer"/>
        <result column="partial_shipment_falg" jdbcType="TINYINT" property="partialShipmentFalg" javaType="java.lang.Integer"/>
        <result column="status" jdbcType="TINYINT" property="status" javaType="java.lang.Integer"/>
        <result column="deal_time" jdbcType="TIMESTAMP" property="dealTime" javaType="java.sql.Timestamp"/>
        <result column="deliver_info" jdbcType="VARCHAR" property="deliverInfo" javaType="java.lang.String"/>
        <result column="express_info" jdbcType="VARCHAR" property="expressInfo" javaType="java.lang.String"/>
        <result column="due_time" jdbcType="DATE" property="dueTime" javaType="java.lang.String"/>

        <result column="amount_payable" jdbcType="DECIMAL" property="amountPayable" javaType="java.math.BigDecimal" nullValue="0"/>
        <result column="floor_price" jdbcType="DECIMAL" property="floorPrice" javaType="java.math.BigDecimal" nullValue="0"/>

        <result column="maintenance_fee" jdbcType="DECIMAL" property="maintenanceFee" javaType="java.math.BigDecimal" nullValue="0"/>
        <result column="net_profit" jdbcType="DECIMAL" property="netProfit" javaType="java.math.BigDecimal" nullValue="0"/>
        <result column="actual_payment_time" jdbcType="DATE" property="actualPaymentTime" javaType="java.sql.Date"/>
        <result column="gross_profit" jdbcType="DECIMAL" property="grossProfit" javaType="java.math.BigDecimal" nullValue="0"/>
        <result column="actual_amount_paid" jdbcType="DECIMAL" property="actualAmountPaid" javaType="java.math.BigDecimal" nullValue="0"/>
        <result column="unpaid_amount" jdbcType="DECIMAL" property="unpaidAmount" javaType="java.math.BigDecimal" nullValue="0"/>
        <result column="is_complaint" jdbcType="TINYINT" property="isComplaint" javaType="java.lang.Integer"/>
        <result column="is_pledge" jdbcType="TINYINT" property="isPledge" javaType="java.lang.Integer"/>
        <result column="is_modify_price" jdbcType="TINYINT" property="isModifyPrice" javaType="java.lang.Integer"/>
        <result column="claim_amount" jdbcType="DECIMAL" property="claimAmount" javaType="java.math.BigDecimal" nullValue="0"/>
        <result column="create_user_id" jdbcType="INTEGER" property="createUserId" javaType="java.lang.Integer"/>
        <result column="create_user_name" jdbcType="VARCHAR" property="createUserName" javaType="java.lang.String"/>
        <result column="lastmodify_user_id" jdbcType="INTEGER" property="lastmodifyUserId" javaType="java.lang.Integer"/>
        <result column="lastmodify_user_name" jdbcType="VARCHAR" property="lastmodifyUserName" javaType="java.lang.String"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" javaType="java.lang.String"/>
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" javaType="java.lang.String"/>
        <result column="failure_analysis" jdbcType="VARCHAR" property="failureAnalysis" javaType="java.lang.String"/>
        <result column="exchange_terms_detail" jdbcType="VARCHAR" property="exchangeTermsDetail" javaType="java.lang.String"/>
        <result column="latest_delivery_time" jdbcType="DATE" property="latestDeliveryTime" javaType="java.lang.String"/>
        <result column="merchandiser" jdbcType="VARCHAR" property="merchandiser" javaType="java.lang.String"/>
        <result column="merchandiser_name" jdbcType="VARCHAR" property="merchandiserName" javaType="java.lang.String"/>

    </resultMap>


    <sql id="COST-PROFIT-QUERY-COMMON">
        <dynamic prepend=" WHERE ">
            <isNotEmpty prepend=" AND " property="customerName">
                base.full_name like concat('%',#customerName#,'%')
            </isNotEmpty>
            <isNotEmpty prepend=" OR " property="customerName">
                base.short_name like concat('%',#customerName#,'%')
            </isNotEmpty>
            <isNotEmpty prepend=" AND " property="customerLevel">
                base.customer_level = #customerLevel#
            </isNotEmpty>

            <isNotEmpty prepend=" AND " property="country">
                tc.name like concat('%',#country#,'%')
            </isNotEmpty>

            <isNotEmpty prepend=" AND " property="startTime">
                <![CDATA[
                     a.deal_time  >=  #startTime#
                ]]>
            </isNotEmpty>
            <isNotEmpty prepend=" AND " property="endTime">
                <![CDATA[
                     a.deal_time  <=  #endTime#
                ]]>
            </isNotEmpty>
            <isNotEmpty prepend=" AND " property="salesManId">
                a.sales_man_id = #salesManId#
            </isNotEmpty>
            <!--<isNotEqual property="areaClassId" compareValue="0" prepend=" AND ">-->
                <!--base.customer_area_id = #areaClassId#-->
                <!--<isNotEqual property="areaId" compareValue="0" prepend=" AND ">-->
                    <!--base.country_id = #areaId#-->
                <!--</isNotEqual>-->
            <!--</isNotEqual>-->
            <isNotEmpty prepend="and" property="areaId">
                base.customer_area_id in ($areaId$)
            </isNotEmpty>
            <isNotEmpty prepend="and" property="merchandiser">
                base.merchandiser = #merchandiser#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="merchandiserName">
                base.merchandiser_name = #merchandiserName#
            </isNotEmpty>
        </dynamic>
    </sql>


    <sql id="QUERY-COMMON">
        <dynamic prepend=" WHERE ">
            <isNotEmpty prepend=" AND " property="customerId">
                customer_id = #customerId#
            </isNotEmpty>
            <isNotEmpty prepend=" AND " property="status">
                status = #status#
            </isNotEmpty>
            <isNotEmpty prepend=" AND " property="saleOrganizationId">
                sale_organization_id = #saleOrganizationId#
            </isNotEmpty>
            <isNotEmpty prepend=" AND " property="ncOrderId">
                nc_order_id =  #ncOrderId#
            </isNotEmpty>
            <isNotEmpty prepend=" AND " property="startTime">
                <![CDATA[
                     deal_time  >=  #startTime#
                ]]>
            </isNotEmpty>
            <isNotEmpty prepend="and" property="merchandiser">
                base.merchandiser = #merchandiser#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="merchandiserName">
                base.merchandiser_name = #merchandiserName#
            </isNotEmpty>
        </dynamic>
    </sql>

    <sql id="ORDER-PAGE-COMMON">
        <dynamic prepend=" WHERE ">
            <isNotEmpty prepend=" AND " property="customerName">
                base.short_name like concat('%',#customerName#,'%')
            </isNotEmpty>
            <isNotEmpty prepend=" OR " property="customerName">
                base.full_name like concat('%',#customerName#,'%')
            </isNotEmpty>
            <isNotEmpty prepend=" AND " property="salesManId">
                a.sales_man_id = #salesManId#
            </isNotEmpty>
            <isNotEmpty prepend=" AND " property="ncOrderId">
                a.nc_order_id like concat('%',#ncOrderId#,'%')
            </isNotEmpty>
            <isNotEmpty prepend=" AND " property="status">
                a.status = #status#
            </isNotEmpty>
            <isNotEmpty prepend=" AND " property="saleOrganizationId">
                a.sale_organization_id = #saleOrganizationId#
            </isNotEmpty>
            <isNotEmpty prepend=" AND " property="saleOrganizationName">
                a.sale_organization_name like concat('%',#saleOrganizationName,'%')
            </isNotEmpty>
            <isNotEmpty prepend=" AND " property="customerLevel">
                base.customer_level = #customerLevel#
            </isNotEmpty>
            <!--<isNotEqual property="areaClassId" compareValue="0" prepend=" AND ">-->
                 <!--base.customer_area_id = #areaClassId#-->
                <!--<isNotEqual property="areaId" compareValue="0" prepend=" AND ">-->
                    <!--base.country_id = #areaId#-->
                <!--</isNotEqual>-->
            <!--</isNotEqual>-->
            <isNotEmpty prepend=" AND" property="areaId">
                base.customer_area_id in  ($areaId$)
            </isNotEmpty>
            <isNotEmpty prepend=" AND " property="enterpriseNature">
                nature.customer_id=base.customer_id
            </isNotEmpty>
            <isNotNull prepend=" AND ">
                a.`status` IN (-1,2,3)
            </isNotNull>
            <isNotEmpty prepend=" AND " property="orderBy">
                order by $orderBy$
            </isNotEmpty>
            <isNotEmpty prepend=" AND " property="startTime">
                <![CDATA[
                     deal_time  >=  #startTime#
                ]]>
            </isNotEmpty>
            <isNotEmpty prepend=" AND " property="endTime">
                <![CDATA[
                     deal_time  <=  #endTime#
                ]]>
            </isNotEmpty>
            <isNotEmpty prepend="and" property="merchandiser">
                base.merchandiser = #merchandiser#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="merchandiserName">
                base.merchandiser_name = #merchandiserName#
            </isNotEmpty>
        </dynamic>
    </sql>

    <sql id="OFFER-PAGE-COMMON">
        <dynamic prepend=" WHERE">
            <isNotEmpty prepend=" AND " property="customerName">
                base.short_name = #customerName#
            </isNotEmpty>
            <isNotEmpty prepend=" OR " property="customerName">
                base.full_name like concat('%',#customerName#,'%')
            </isNotEmpty>
            <isNotEmpty prepend=" AND " property="status">
                a.status = #status#
            </isNotEmpty>
            <isNotEmpty prepend=" AND " property="orderId">
                a.order_id like concat('%',#orderId#,'%')
            </isNotEmpty>
            <isNotEmpty prepend=" AND " property="customerLevel">
                base.customer_level = #customerLevel#
            </isNotEmpty>
            <!--<isNotEqual property="areaClassId" compareValue="0" prepend=" AND ">-->
                <!--base.customer_area_id = #areaClassId#-->
                <!--<isNotEqual property="areaId" compareValue="0" prepend=" AND ">-->
                    <!--base.country_id = #areaId#-->
                <!--</isNotEqual>-->
            <!--</isNotEqual>-->
            <isNotEmpty prepend=" AND " property="areaId">
                base.customer_area_id  in  ($areaId$)
            </isNotEmpty>
            <isNotEmpty prepend=" AND " property="enterpriseNature">
                nature.customer_id=base.customer_id
            </isNotEmpty>
            <isNotNull prepend=" AND ">
                a.`status` IN (-2,0,1)
            </isNotNull>
            <isNotEmpty prepend=" AND " property="orderBy">
                order by $orderBy$
            </isNotEmpty>
            <isNotEmpty prepend="and" property="merchandiser">
                base.merchandiser = #merchandiser#
            </isNotEmpty>
            <isNotEmpty prepend="and" property="merchandiserName">
                base.merchandiser_name = #merchandiserName#
            </isNotEmpty>
        </dynamic>
    </sql>

    <update id="UPDATE" parameterClass="BusinessOrder" >
        update business_order
        <dynamic prepend="set" >
            <isNotNull prepend=", " property="isCreditRisk">
                is_credit_risk = #isCreditRisk#
            </isNotNull>
            <isNotNull prepend=", " property="prepayRate">
                prepay_rate = #prepayRate#
            </isNotNull>
            <isNotNull prepend=", " property="departmentName">
                department_name = #departmentName#
            </isNotNull>
            <isNotNull prepend=", " property="nusdexchgrate">
                nusdexchgrate = #nusdexchgrate#
            </isNotNull>
            <isNotNull prepend=", " property="nexchangerate">
                nexchangerate = #nexchangerate#
            </isNotNull>
            <isNotNull prepend=", " property="lastdelydate">
                lastdelydate = #lastdelydate#
            </isNotNull>
            <isNotNull prepend=", " property="grossProfit">
                gross_profit= #grossProfit#
            </isNotNull>


            <isNotNull prepend=", " property="ncOrderId" >
                nc_order_id = #ncOrderId#
            </isNotNull>
            <isNotNull prepend=", " property="businessId" >
                business_id = #businessId#
            </isNotNull>
            <isNotNull prepend=", " property="customerId" >
                customer_id = #customerId#
            </isNotNull>
            <isNotNull prepend=", " property="customerDutyParagraph" >
                customer_duty_paragraph = #customerDutyParagraph#
            </isNotNull>
            <isNotNull prepend=", " property="billToCustomer" >
                bill_to_customer = #billToCustomer#
            </isNotNull>
            <isNotNull prepend=", " property="salesManId" >
                sales_man_id = #salesManId#
            </isNotNull>
            <isNotNull prepend=", " property="salesManName" >
                sales_man_name = #salesManName#
            </isNotNull>
            <isNotNull prepend=", " property="departmentId" >
                department_id = #departmentId#
            </isNotNull>
            <isNotNull prepend=", " property="saleOrganizationId" >
                sale_organization_id = #saleOrganizationId#
            </isNotNull>
            <isNotNull prepend=", " property="saleOrganizationName" >
                sale_organization_name = #saleOrganizationName#
            </isNotNull>
            <isNotNull prepend=", " property="destinationPort" >
                destination_port = #destinationPort#
            </isNotNull>
            <isNotNull prepend=", " property="shipmentPort" >
                shipment_port = #shipmentPort#
            </isNotNull>

            <isNotNull prepend=", " property="destinationPortName" >
                destination_port_name = #destinationPortName#
            </isNotNull>
            <isNotNull prepend=", " property="shipmentPortName" >
                shipment_port_name = #shipmentPortName#
            </isNotNull>



            <isNotNull prepend=", " property="collectionAgreement" >
                collection_agreement = #collectionAgreement#
            </isNotNull>
            <isNotNull prepend=", " property="tradeType" >
                trade_type = #tradeType#
            </isNotNull>
            <isNotNull prepend=", " property="tradeTerm" >
                trade_term = #tradeTerm#
            </isNotNull>
            <isNotNull prepend=", " property="currency" >
                currency = #currency#
            </isNotNull>
            <isNotNull prepend=", " property="tradeCountry" >
                trade_country = #tradeCountry#
            </isNotNull>
            <isNotNull prepend=", " property="tradeCountryName" >
                trade_country_name = #tradeCountryName#
            </isNotNull>
            <isNotNull prepend=", " property="premiumRate" >
                premium_rate = #premiumRate#
            </isNotNull>
            <isNotNull prepend=", " property="guaranteeRate" >
                guarantee_rate = #guaranteeRate#
            </isNotNull>
            <isNotNull prepend=", " property="discountRate" >
                discount_rate = #discountRate#
            </isNotNull>
            <isNotNull prepend=", " property="lossRate" >
                loss_rate = #lossRate#
            </isNotNull>
            <isNotNull prepend=", " property="saleRate" >
                sale_rate = #saleRate#
            </isNotNull>
            <isNotNull prepend=", " property="managementRate" >
                management_rate = #managementRate#
            </isNotNull>
            <isNotNull prepend=", " property="grossRate" >
                gross_rate = #grossRate#
            </isNotNull>
            <isNotNull prepend=", " property="creditRate" >
                credit_rate = #creditRate#
            </isNotNull>
            <isNotNull prepend=", " property="transportFlag" >
                transport_flag = #transportFlag#
            </isNotNull>
            <isNotNull prepend=", " property="partialShipmentFalg" >
                partial_shipment_falg = #partialShipmentFalg#
            </isNotNull>
            <isNotNull prepend=", " property="status" >
                status = #status#
            </isNotNull>
            <isNotNull prepend=", " property="dealTime" >
                deal_time = #dealTime#
            </isNotNull>
            <isNotNull prepend="," property="deliverInfo" >
                deliver_info = #deliverInfo#
            </isNotNull>
            <isNotNull prepend=", " property="expressInfo" >
                express_info = #expressInfo#
            </isNotNull>
            <isNotNull prepend=", " property="dueTime" >
                due_time = #dueTime#
            </isNotNull>
            <isNotNull prepend=", " property="amountPayable" >
                amount_payable = #amountPayable#
            </isNotNull>
            <isNotNull prepend=", " property="floorPrice" >
                floor_price = #floorPrice#
            </isNotNull>
            <isNotNull prepend=", " property="maintenanceFee" >
                maintenance_fee = #maintenanceFee#
            </isNotNull>
            <isNotNull prepend=", " property="netProfit" >
                net_profit = #netProfit#
            </isNotNull>
            <isNotNull prepend=", " property="actualPaymentTime" >
                actual_payment_time = #actualPaymentTime#
            </isNotNull>
            <isNotNull prepend=", " property="actualAmountPaid" >
                actual_amount_paid = #actualAmountPaid#
            </isNotNull>
            <isNotNull prepend=", " property="unpaidAmount" >
                unpaid_amount = #unpaidAmount#
            </isNotNull>
            <isNotNull prepend="," property="isComplaint" >
                is_complaint = #isComplaint#
            </isNotNull>
            <isNotNull prepend="," property="isPledge" >
                is_pledge = #isPledge#
            </isNotNull>
            <isNotNull prepend="," property="isModifyPrice" >
                is_modify_price = #isModifyPrice#
            </isNotNull>
            <isNotNull prepend="," property="claimAmount" >
                claim_amount = #claimAmount#
            </isNotNull>
            <isNotNull prepend="," property="lastmodifyUserId" >
                lastmodify_user_id = #lastmodifyUserId#
            </isNotNull>
            <isNotNull prepend="," property="lastmodifyUserName" >
                lastmodify_user_name = #lastmodifyUserName#
            </isNotNull>
            <isNotNull prepend="," property="modifyTime" >
                modify_time = now()
            </isNotNull>
            <isNotNull prepend="," property="prepayRate" >
                prepay_rate = #prepayRate#
            </isNotNull>
            <isNotEmpty prepend=", " property="exchangeTermsDetail">
                exchange_terms_detail = #exchangeTermsDetail#
            </isNotEmpty>
            <isNotEmpty prepend=", " property="latestDeliveryTime">
                latest_delivery_time  = #latestDeliveryTime#
            </isNotEmpty>
            <isNotEmpty prepend="," property="merchandiser">
                merchandiser = #merchandiser#
            </isNotEmpty>
            <isNotEmpty prepend="," property="merchandiserName">
                merchandiser_name = #merchandiserName#
            </isNotEmpty>
        </dynamic>
        where order_id = #orderId#
    </update>

    <insert id="ADD" parameterClass="BusinessOrder" >

        insert into business_order (order_id, nc_order_id, business_id, customer_id,customer_duty_paragraph,
        bill_to_customer, sales_man_id, sales_man_name, department_id,sale_organization_id,
        sale_organization_name, destination_port, shipment_port,destination_port_name, shipment_port_name,collection_agreement, trade_type,
        trade_term, currency, trade_country,trade_country_name, premium_rate,guarantee_rate, discount_rate,
        loss_rate, sale_rate, management_rate, gross_rate, credit_rate,
        transport_flag, partial_shipment_falg, status, deal_time, deliver_info, express_info, due_time,amount_payable, floor_price, maintenance_fee,
        net_profit, actual_payment_time,actual_amount_paid, unpaid_amount, is_complaint, is_pledge, is_modify_price, claim_amount,create_user_id, create_user_name,
        lastmodify_user_id, lastmodify_user_name, create_time,modify_time,is_credit_risk,prepay_rate,department_name,nusdexchgrate,nexchangerate,lastdelydate,gross_profit,
        exchange_terms_detail,latest_delivery_time,merchandiser,merchandiser_name)
        values (#orderId#, #ncOrderId#, #businessId#, #customerId#,#customerDutyParagraph#,
        #billToCustomer#, #salesManId#,#salesManName#, #departmentId#, #saleOrganizationId#,
        #saleOrganizationName#, #destinationPort#, #shipmentPort#,#destinationPortName#, #shipmentPortName#,#collectionAgreement#, #tradeType#,
        #tradeTerm#, #currency#,#tradeCountry#,#tradeCountryName#,#premiumRate#, #guaranteeRate#,#discountRate#,
        #lossRate#, #saleRate#, #managementRate#,#grossRate#, #creditRate#,
        #transportFlag#,#partialShipmentFalg#, #status#, #dealTime#, #deliverInfo#,#expressInfo#, #dueTime#, #amountPayable#, #floorPrice#,#maintenanceFee#,
        #netProfit#, #actualPaymentTime#,#actualAmountPaid#, #unpaidAmount#, #isComplaint#, #isPledge#,#isModifyPrice#, #claimAmount#, #createUserId#,#createUserName#, #lastmodifyUserId#, #lastmodifyUserName#,
        now(), now(), #isCreditRisk#,#prepayRate#,#departmentName#,#nusdexchgrate#,#nexchangerate#,#lastdelydate#,#grossProfit#,#exchangeTermsDetail#,#latestDeliveryTime#,
        #merchandiser#,#merchandiserName#)

    </insert>

    <!--报价及订单详情页表头-->
    <select id="GET-BY-ID" resultMap="BUSINESSORDER-MAP" parameterClass="java.lang.String" >
    <![CDATA[
                  SELECT
                order_id,
                nc_order_id,
                business_id,
                customer_id,
                customer_duty_paragraph,
                bill_to_customer,
                sales_man_id,
                sales_man_name,
                department_id,
                department_name,
                sale_organization_id,
                sale_organization_name,
                destination_port,
                shipment_port,
                 destination_port_name,
                shipment_port_name,
                collection_agreement,
                trade_type,
                trade_term,
                currency,
                nusdexchgrate,
                nexchangerate,
                lastdelydate,
                trade_country,
                trade_country_name,
                premium_rate,
                guarantee_rate,
                discount_rate,
                loss_rate,
                sale_rate,
                management_rate,
                gross_rate,
                credit_rate,
                transport_flag,
                partial_shipment_falg,
                STATUS,
                deal_time,
                deliver_info,
                express_info,
                due_time,
                amount_payable,
                floor_price,
                maintenance_fee,
                net_profit,
                actual_payment_time,
                gross_profit,
                actual_amount_paid,
                unpaid_amount,
                is_complaint,
                is_pledge,
                is_modify_price,
                claim_amount,
                create_user_id,
                create_user_name,
                lastmodify_user_id,
                lastmodify_user_name,
                create_time,
                modify_time,
                failure_analysis,
                is_credit_risk,
                prepay_rate,
                exchange_terms_detail,
                latest_delivery_time,
                merchandiser,
                merchandiser_name
            FROM
                business_order
            WHERE
                order_id = #orderId#
    ]]>
</select>

    <!--更新报价单状态-->
    <update id="UPDATE-OFFER-STATUS" parameterClass="BusinessOrder">
        update business_order
        <dynamic prepend="set" >
            <isNotNull prepend=", " property="failureAnalysis" >
                failure_analysis = #failureAnalysis#
            </isNotNull>
            <isNotNull prepend=", " property="status" >
                status = #status#
            </isNotNull>
            <isNotNull prepend="," property="lastmodifyUserId" >
                lastmodify_user_id = #lastmodifyUserId#
            </isNotNull>
            <isNotNull prepend="," property="lastmodifyUserName" >
                lastmodify_user_name = #lastmodifyUserName#
            </isNotNull>
            <isNotNull prepend="," property="modifyTime" >
                modify_time = now()
            </isNotNull>
        </dynamic>
        where order_id = #orderId#
    </update>

    <select id="OFFER-GET-PAGE"  parameterClass="QueryBusinessOrder" resultClass="QueryBusinessOrder">
        <![CDATA[
            SELECT
            a.order_id orderId,
            a.business_id businessId,
            base.full_name customerName,
            base.customer_level customerLevel,
            base.full_enterprise_nature enterpriseNature,
            a.amount_payable amountPayable,
            GROUP_CONCAT(b.`name`) AS orderProduct,
            a.`status` status
        FROM
            business_order a
        LEFT JOIN customer_base_info base ON base.customer_id = a.customer_id
        LEFT JOIN business_order_product b ON b.order_id = a.order_id
        LEFT JOIN t_countryzone tc ON tc.`code` = base.countryzone
    ]]>
        <isNotEmpty prepend=", " property="enterpriseNature">
            (select * from customer_enterprise_nature where nature=#enterpriseNature#) nature
        </isNotEmpty>
        <isParameterPresent>
            <include refid="OFFER-PAGE-COMMON"/>
            GROUP BY a.order_id
            ORDER BY a.modify_time DESC
            LIMIT #startRow#,#pageSize#
        </isParameterPresent>
    </select>

    <delete id="DELETE-BY-ID" parameterClass="java.lang.String">
        <![CDATA[
        delete from business_order where order_id = #orderId#
    ]]>
    </delete>



    <select id="ORDER-GET-PAGE" parameterClass="QueryBusinessOrder" resultClass="QueryBusinessOrder">
        SELECT
        a.order_id orderId,
        a.business_id businessId,
        a.sale_organization_name saleOrganizationName,
        a.nc_order_id ncOrderId,
        base.full_name customerName,
        tc.`name` country,
        a.amount_payable amountPayable,
        a.floor_price floorPrice,
        a.is_complaint isComplaint,
        a.is_modify_price isModifyPrice,
        a.net_profit netProfit,
        a.`status` status,
        a.deal_time dealTime,
        sc.billcode
        FROM
        business_order a
        LEFT JOIN customer_base_info base ON base.customer_id = a.customer_id
        LEFT JOIN t_countryzone tc ON tc.`code` = base.countryzone
        LEFT JOIN sync_contract sc ON sc.pk_longpro = a.nc_order_id
        <isNotEmpty prepend=", " property="enterpriseNature">
            (select * from customer_enterprise_nature where nature=#enterpriseNature#) nature
        </isNotEmpty>
        <isParameterPresent>
            <include refid="ORDER-PAGE-COMMON"/>
            GROUP BY a.order_id
            ORDER BY a.modify_time DESC
            limit #startRow#,#pageSize#
        </isParameterPresent>
    </select>

    <select id="COUNT-ORDER" parameterClass="QueryBusinessOrder" resultClass="java.lang.Integer">
        select count(DISTINCT a.order_id) from business_order a
        LEFT JOIN customer_base_info base ON base.customer_id = a.customer_id
        <isNotEmpty prepend=", " property="enterpriseNature">
            (select * from customer_enterprise_nature where nature=#enterpriseNature#) nature
        </isNotEmpty>
        <isParameterPresent>
            <include refid="ORDER-PAGE-COMMON"/>
        </isParameterPresent>
    </select>


    <select id="COUNT-OFFER" parameterClass="QueryBusinessOrder" resultClass="java.lang.Integer">
        select count(DISTINCT a.order_id)
        FROM
        business_order a
        LEFT JOIN customer_base_info base ON base.customer_id = a.customer_id
        LEFT JOIN business_order_product b ON b.order_id = a.order_id
        <isNotEmpty prepend=", " property="enterpriseNature">
            (select * from customer_enterprise_nature where nature=#enterpriseNature#) nature
        </isNotEmpty>
        <isParameterPresent>
            <include refid="OFFER-PAGE-COMMON"/>
        </isParameterPresent>
    </select>

    <select id="query_page" parameterClass="QueryBusinessOrder" resultClass="BusinessOrder">
        select
        sale_organization_name saleOrganizationName,
        order_id orderId,
        nc_order_id ncOrderId,
        amount_payable amountPayable,
        floor_price floorPrice,
        is_complaint isComplaint,
        is_modify_price isModifyPrice,
        net_profit netProfit,
        is_pledge isPledge,
        deal_time dealTime
        from
        business_order
        <isParameterPresent>
            <include refid="QUERY-COMMON"/>
            <isNotEmpty prepend=" AND " property="orderBy">
                order by $orderBy$
            </isNotEmpty>
            limit #startRow#,#pageSize#
        </isParameterPresent>
    </select>



    <select id="count" parameterClass="QueryBusinessOrder" resultClass="java.lang.Integer">
        select count(*) from business_order
        <isParameterPresent>
            <include refid="QUERY-COMMON"/>
        </isParameterPresent>
    </select>


    <sql id="COST-AND-PROFIT-INLINE">
        <dynamic prepend=" WHERE">
            <isNotEmpty prepend=" AND " property="startTime">
                <![CDATA[
                     cvr.start_time >=  #startTime#
                ]]>
            </isNotEmpty>
            <isNotEmpty prepend=" AND " property="endTime">
                <![CDATA[
                     cvr.end_time <=  #endTime#
                ]]>
            </isNotEmpty>
         </dynamic>
    </sql>

    <!--费用和利润统计列表-->
    <select id="COST-AND-PROFIT" remapResults="true" parameterClass="CostAndProfitStatistics" resultClass="CostAndProfitStatistics">
        <isEqual property="dimension" compareValue="2">
            <![CDATA[
                        SELECT
                base.customer_id customerId,
                base.full_name customerName,
                base.customer_level customerLevel,
                tc.`name` country,
                SUM(sc.amount) salesAmount,
                SUM(sc.gross_profit) grossProfit,
                SUM(cs.nclaimmny) actualAmountPaid,
                b.maintenance_fee maintenanceFee,
                a.sales_man_id salesManId,
                a.sales_man_name salesManName
                      FROM
              customer_base_info base
              LEFT JOIN t_countryzone tc
                ON tc.`code` = base.countryzone
              LEFT JOIN business_order a
                ON a.customer_id = base.`customer_id`
              LEFT JOIN sync_contract sc
                ON sc.pk_longpro = a.nc_order_id
              LEFT JOIN (SELECT cbctid, SUM(nclaimmny) nclaimmny FROM t_receipt WHERE fclaimstatus=3 GROUP BY cbctid ) cs
            ON cs.cbctid = sc.`pk_contract`
              LEFT JOIN (SELECT
                cvr.customer_id,
                SUM(cvr.activity_expense) maintenance_fee
            FROM
                customer_visit_record cvr
             ]]>
         <isParameterPresent>
             <include refid="COST-AND-PROFIT-INLINE"/>
         </isParameterPresent>
            GROUP BY
            cvr.customer_id) b ON b.customer_id = base.customer_id
            <isParameterPresent>
                <include refid="COST-PROFIT-QUERY-COMMON"/>
                <isNotEmpty prepend=" AND " property="orderBy">
                    order by $orderBy$
                </isNotEmpty>
                GROUP BY base.customer_id
                limit #startRow#,#pageSize#
            </isParameterPresent>
        </isEqual>

        <!--每个客户购买产品统计-->
        <isEqual property="dimension" compareValue="4">
          <![CDATA[
                 SELECT
					pi.`name` productName,
					pi.category_name categoryName,
					pw.specification,
					SUM(ssc.num) salesVolume,
					SUM(ssc.gross_profit) grossProfit,
					SUM(ssc.amount) salesAmount,
					SUM(ssc.gross_rate) grossRate,
					SUM(cs.nclaimmny) actualAmountPaid
				FROM
					sync_sub_contract ssc
				LEFT JOIN sync_contract sc ON sc.pk_contract = ssc.pk_contract
				LEFT JOIN product_ware pw ON pw.`code` = ssc.product_code
				LEFT JOIN product_info pi ON pi.product_id = pw.product_info_id
				LEFT JOIN business_order bo ON bo.nc_order_id = sc.pk_longpro
				LEFT JOIN (SELECT cbctid, SUM(nclaimmny) nclaimmny FROM t_receipt WHERE fclaimstatus=3 GROUP BY cbctid ) cs
            ON cs.cbctid = sc.`pk_contract`
				WHERE
					bo.customer_id = #customerId#
				GROUP BY
					pi.`name`
        ]]>
        </isEqual>

    </select>

    <select id="COUNT-COST-AND-PROFIT" parameterClass="CostAndProfitStatistics" resultClass="java.lang.Integer">
        <![CDATA[
                    SELECT
                        count(*)
                    FROM
              customer_base_info base
              LEFT JOIN t_countryzone tc ON tc.`code` = base.countryzone
              LEFT JOIN business_order a ON a.customer_id = base.`customer_id`
             ]]>
        <isParameterPresent>
            <include refid="COST-PROFIT-QUERY-COMMON"/>
        </isParameterPresent>
    </select>

    <sql id="PROFIT-STATISTICS-QUERY-COMMON">
        <dynamic prepend=" WHERE ">
            <isNotEmpty prepend=" AND " property="startTime">
                <![CDATA[
                     a.deal_time  >=  #startTime#
                ]]>
            </isNotEmpty>
            <isNotEmpty prepend=" AND " property="endTime">
                <![CDATA[
                     a.deal_time  <=  #endTime#
                ]]>
            </isNotEmpty>
        </dynamic>
    </sql>

    <!--费用统计列表-->
    <select id="PROFIT-STATISTICS" remapResults="true" parameterClass="CostAndProfitStatistics" resultClass="CostAndProfitStatistics">
        <isEqual property="dimension" compareValue="0">
            SELECT
            base.customer_area_id customerAreaId,
            base.customer_area customerArea,
            SUM(sc.amount) salesAmount,
            SUM(sc.gross_profit) grossProfit,
            SUM(a.maintenance_fee) maintenanceFee,
            SUM(a.net_profit) netProfit,
            SUM(cs.nclaimmny) actualAmountPaid
            FROM
            customer_base_info base
            LEFT JOIN business_order a ON a.customer_id = base.customer_id
            LEFT JOIN sync_contract sc ON sc.pk_longpro = a.nc_order_id
            LEFT JOIN (SELECT cbctid, SUM(nclaimmny) nclaimmny FROM t_receipt WHERE fclaimstatus=3 GROUP BY cbctid ) cs
            ON cs.cbctid = sc.`pk_contract`
            <isParameterPresent>
                <include refid="PROFIT-STATISTICS-QUERY-COMMON"/>
            </isParameterPresent>
            GROUP BY base.customer_area_id
            ORDER BY netProfit DESC
            limit #startRow#,#pageSize#
        </isEqual>
        <isEqual property="dimension" compareValue="1">
            SELECT
            tp.country,
            SUM(sc.amount) salesAmount,
            SUM(sc.gross_profit) grossProfit,
            SUM(a.maintenance_fee) maintenanceFee,
            SUM(a.net_profit) netProfit,
            SUM(cs.nclaimmny) actualAmountPaid
            FROM
            business_order a
            LEFT JOIN sync_contract sc ON sc.pk_longpro = a.nc_order_id
            LEFT JOIN t_portdoc tp ON tp.vcode = a.destination_port
            LEFT JOIN (SELECT cbctid, SUM(nclaimmny) nclaimmny FROM t_receipt WHERE fclaimstatus=3 GROUP BY cbctid ) cs
            ON cs.cbctid = sc.`pk_contract`
            <isParameterPresent>
                <include refid="PROFIT-STATISTICS-QUERY-COMMON"/>
            </isParameterPresent>
            GROUP BY
            a.destination_port
            ORDER BY
            netProfit DESC
            <isNotEmpty property="startRow">
                limit #startRow#,#pageSize#
            </isNotEmpty>
        </isEqual>
        <isEqual property="dimension" compareValue="2">
            SELECT
            tc.`name` country,
            base.customer_id customerId,
            base.customer_area customerArea,
            base.full_name customerName,
            SUM(sc.amount) salesAmount,
            SUM(sc.gross_profit) grossProfit,
            SUM(a.maintenance_fee) maintenanceFee,
            SUM(a.net_profit) netProfit,
            SUM(cs.nclaimmny) actualAmountPaid,
            a.sales_man_id salesManId,
            a.sales_man_name salesManName
            FROM
            customer_base_info base
            LEFT JOIN business_order a ON a.customer_id = base.customer_id
            LEFT JOIN sync_contract sc ON sc.pk_longpro = a.nc_order_id
            LEFT JOIN	t_countryzone tc ON tc.`code` = base.countryzone
            LEFT JOIN (SELECT cbctid, SUM(nclaimmny) nclaimmny FROM t_receipt WHERE fclaimstatus=3 GROUP BY cbctid ) cs
            ON cs.cbctid = sc.`pk_contract`
            <isParameterPresent>
                <include refid="PROFIT-STATISTICS-QUERY-COMMON"/>
            </isParameterPresent>
            GROUP BY
            base.customer_id
            ORDER BY
            netProfit DESC
            limit #startRow#,#pageSize#
        </isEqual>
        <isEqual property="dimension" compareValue="3">
            SELECT
            tc.`name` country,
            base.customer_area customerArea,
            base.full_name customerName,
            ua.userArea,
            SUM(sc.amount) salesAmount,
            SUM(sc.gross_profit) grossProfit,
            SUM(a.maintenance_fee) maintenanceFee,
            SUM(a.net_profit) netProfit,
            SUM(cs.nclaimmny) actualAmountPaid,
            a.sales_man_id salesManId,
            a.sales_man_name salesManName
            FROM
            business_order a
            LEFT JOIN customer_base_info base ON a.customer_id = base.customer_id
            LEFT JOIN sync_contract sc ON sc.pk_longpro = a.nc_order_id
            LEFT JOIN (SELECT cbctid, SUM(nclaimmny) nclaimmny FROM t_receipt WHERE fclaimstatus=3 GROUP BY cbctid ) cs
            ON cs.cbctid = sc.`pk_contract`
            LEFT JOIN	t_countryzone tc ON tc.`code` = base.countryzone
            LEFT JOIN (
            SELECT
            pua.user_id,
            GROUP_CONCAT(pac.area_name) AS userArea
            FROM
            p_user_area pua
            LEFT JOIN p_area_code pac ON pac.areaid = pua.area_id
            GROUP BY pua.user_id
            ) ua ON ua.user_id =a.sales_man_id
            <isParameterPresent>
                <include refid="PROFIT-STATISTICS-QUERY-COMMON"/>
            </isParameterPresent>
            GROUP BY
            a.sales_man_id
            ORDER BY
            netProfit DESC
            limit #startRow#,#pageSize#
        </isEqual>

        <isEqual property="dimension" compareValue="4">
            SELECT
            bi.`name` productName,
            bi.category_name categoryName,
            SUM(ssc.num) salesVolume,
            SUM(ssc.gross_profit) grossProfit,
            SUM(ssc.amount) salesAmount,
            SUM(cs.nclaimmny) actualAmountPaid,
            SUM(ssc.gross_rate) grossRate
            FROM
            sync_sub_contract ssc
            LEFT JOIN sync_contract sc ON sc.pk_contract = ssc.pk_contract_b
            LEFT JOIN business_order a ON a.nc_order_id = sc.pk_longpro
            LEFT JOIN product_ware pw ON ssc.product_code = pw.`code`
            LEFT JOIN product_info bi ON bi.product_id = pw.product_info_id
            LEFT JOIN (SELECT cbctid, SUM(nclaimmny) nclaimmny FROM t_receipt WHERE fclaimstatus=3 GROUP BY cbctid ) cs
            ON cs.cbctid = sc.`pk_contract`
            <isParameterPresent>
                <include refid="PROFIT-STATISTICS-QUERY-COMMON"/>
            </isParameterPresent>
            GROUP BY
            bi.`name`
            ORDER BY
            grossRate DESC
            limit #startRow#,#pageSize#
        </isEqual>
    </select>

    <select id="COUNT-PROFIT-STATISTICS" parameterClass="CostAndProfitStatistics" resultClass="java.lang.Integer">
        <isEqual property="dimension" compareValue="0">
            select count(*) from (SELECT count(*)
            FROM
            customer_base_info base
            LEFT JOIN business_order a ON a.customer_id = base.customer_id
            <isParameterPresent>
                <include refid="PROFIT-STATISTICS-QUERY-COMMON"/>
            </isParameterPresent>
            GROUP BY base.customer_area_id) temp
        </isEqual>
        <isEqual property="dimension" compareValue="1">
           select count(*) from (SELECT
            count(*)
            FROM
            customer_base_info base
            LEFT JOIN business_order a ON a.customer_id = base.customer_id
            <isParameterPresent>
                <include refid="PROFIT-STATISTICS-QUERY-COMMON"/>
            </isParameterPresent>
            GROUP BY
            base.countryzone) temp
        </isEqual>
        <isEqual property="dimension" compareValue="2">
            SELECT count(*) FROM (SELECT
            count(*)
            FROM
            customer_base_info base
            LEFT JOIN business_order a ON a.customer_id = base.customer_id
            <isParameterPresent>
                <include refid="PROFIT-STATISTICS-QUERY-COMMON"/>
            </isParameterPresent>
            GROUP BY
            base.customer_id) temp
        </isEqual>
        <isEqual property="dimension" compareValue="3">
            SELECT count(*) FROM (SELECT
            count(*)
            FROM
            business_order a
            LEFT JOIN customer_base_info base ON a.customer_id = base.customer_id
            LEFT JOIN (
            SELECT
            pua.user_id,
            GROUP_CONCAT(pac.area_name) AS userArea
            FROM
            p_user_area pua
            LEFT JOIN p_area_code pac ON pac.areaid = pua.area_id
            GROUP BY pua.user_id
            ) ua ON ua.user_id =a.sales_man_id
            <isParameterPresent>
                <include refid="PROFIT-STATISTICS-QUERY-COMMON"/>
            </isParameterPresent>
            GROUP BY
            a.sales_man_id) temp
        </isEqual>

        <isEqual property="dimension" compareValue="4">
            SELECT
            COUNT(*)
            FROM
            (SELECT
            COUNT(*)
            FROM
            sync_sub_contract ssc
            LEFT JOIN sync_contract sc ON sc.`pk_contract` = ssc.`pk_contract`
            LEFT JOIN	business_order a ON a.nc_order_id  = sc. pk_longpro
            <isParameterPresent>
                <include refid="PROFIT-STATISTICS-QUERY-COMMON"/>
            </isParameterPresent>
            GROUP BY ssc.`product_code`) temp
        </isEqual>
    </select>


    <select id="getByBusinessId" resultClass="java.lang.String" parameterClass="java.lang.String" >
        <![CDATA[
                  SELECT
                order_id
            FROM
                business_order
            WHERE
                business_id = #value#
    ]]>
    </select>

    <select id="getSalesmanDeptId" resultClass="java.lang.String" parameterClass="java.lang.String">
        select d.pk_dept from business_order b,p_dept d where b.department_id = d.code and  order_id = #value#
    </select>

</sqlMap>