<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
         http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:property-placeholder location="classpath:resources.properties"/>

    <!-- 自动扫描,完成bean创建和依赖注入 -->
    <context:component-scan base-package="com.fuhuadata">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>
    <!--启用默认Servlet
     <mvc:default-servlet-handler/>-->

    <!-- 使AspectJ注解起作用：自动为匹配的类生成代理对象 -->
    <aop:aspectj-autoproxy expose-proxy="true" proxy-target-class="true"/>
    <bean id="systemLogAspect" class="com.fuhuadata.web.util.SystemLogAspect"/>

    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
    <mvc:annotation-driven validator="validator">
        <mvc:message-converters register-defaults="true">
            <!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8" />
            </bean>
            <!-- 将Jackson2HttpMessageConverter的默认格式化输出为false -->
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list><value>application/json;charset=UTF-8</value></list>
                </property>
                <property name="prettyPrint" value="false"/>
                <property name="objectMapper">
                    <bean class="com.fuhuadata.web.common.JsonMapper"/>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 从 cookie 中获取本地化信息 -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale" value="zh_CN"/>
        <property name="cookieName" value="locale"/>
        <property name="cookieMaxAge" value="-1"/>
    </bean>

    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="lang"/>
        </bean>
    </mvc:interceptors>

    <!-- 配置视图解析器 如何把handler 方法返回值解析为实际的物理视图 -->
    <!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name = "prefix" value="/WEB-INF/views/"></property>
        <property name = "suffix" value = ".jsp"></property>
    </bean>-->

    <!-- 配置Velocity视图解析器 ，将后缀为vm的文件交给下面的Resolver处理-->
    <bean id="velocityViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
        <!-- velocity tool 2.0 使用 View -->
        <property name="viewClass" value="com.fuhuadata.web.velocity.VelocityToolbox20View"/>
        <!--线上环境设置为true-->
        <property name="cache" value="false"/><!--是否缓存模板-->
        <property name="prefix" value="/"/>
        <property name="suffix" value=".vm"/>
        <property name="layoutUrl" value="layout/layout.vm"/><!--指定layout文件-->
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="toolboxConfigLocation" value="/WEB-INF/velocity/toolbox.xml"/>
        <property name="exposeSpringMacroHelpers" value="true"/><!--是否使用spring对宏定义的支持-->
        <property name="exposeRequestAttributes" value="true"/><!--是否开放request属性-->
        <property name="requestContextAttribute" value="rc"/><!--request属性引用名称-->
        <property name="exposeSessionAttributes" value="true"/><!-- 是否开放 session 属性 -->

        <property name="layoutKey" value="layout"/><!-- layoutKey设定模板文件键值，设定该值后就可以在vm文件中使用该键值设置模板路径-->
        <property name="screenContentKey" value="screen_content"/>

        <property name="dateToolAttribute" value="date"/><!--日期函数名称-->
        <property name="numberToolAttribute" value="number"/><!--数字函数名称-->
    </bean>

    <!-- 配置Velocity引擎 -->
    <bean id="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath" value="/WEB-INF/vm"/>
        <property name="configLocation" value="classpath:velocity.properties"/>
    </bean>


    <!-- 上传文件的解析器 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
        <property name="maxUploadSize" value="10485760000"/>
        <property name="maxInMemorySize" value="40960"/>
    </bean>

    <import resource="spring-mvc-shiro.xml"/>

</beans>