<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
        "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="BUSINESSORDERPRODUCT" >
    <typeAlias alias="BusinessOrderProduct" type="com.fuhuadata.domain.BusinessOrderProduct"/>
    <typeAlias alias="QueryBusinessOrderProduct" type="com.fuhuadata.domain.query.QueryBusinessOrderProduct"/>
    <typeAlias alias="BusinessOrderProductList" type="com.fuhuadata.vo.BusinessOrderProductList"/>

    <resultMap class="com.fuhuadata.domain.BusinessOrderProduct" id="BusinessOrderProductResultMap">
        <result column="id" jdbcType="INTEGER" property="id" />
        <result column="order_id" jdbcType="VARCHAR" property="orderId" />
        <result column="archive_product_id" jdbcType="INTEGER" property="archiveProductId" />
        <result column="product_id" jdbcType="INTEGER" property="productId" />
        <result column="ware_id" jdbcType="INTEGER" property="wareId" />
        <result column="customs_clearance_id" jdbcType="VARCHAR" property="customsClearanceId" />
        <result column="customs_clearance_name" jdbcType="VARCHAR" property="customsClearanceName" />
        <result column="Internal_supply_id" jdbcType="VARCHAR" property="internalSupplyId" />
        <result column="Internal_supply_name" jdbcType="VARCHAR" property="internalSupplyName" />
        <result column="customer_id" jdbcType="INTEGER" property="customerId" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="customer_product_name" jdbcType="VARCHAR" property="customerProductName" />
        <result column="brand" jdbcType="VARCHAR" property="brand" />
        <result column="main_product_amount" jdbcType="DECIMAL" property="mainProductAmount" />
        <result column="main_product_unit" jdbcType="VARCHAR" property="mainProductUnit" />
        <result column="sub_product_amount" jdbcType="DECIMAL" property="subProductAmount" />
        <result column="sub_product_unit" jdbcType="INTEGER" property="subProductUnit" />
        <result column="convert_rate" jdbcType="DECIMAL" property="convertRate" />
        <result column="price_type" jdbcType="VARCHAR" property="priceType" />
        <result column="advise_price" jdbcType="DECIMAL" property="advisePrice" />
        <result column="purchase_price" jdbcType="DECIMAL" property="purchasePrice" />
        <result column="delivery_time" jdbcType="DATE" property="deliveryTime" />
        <result column="Internal_transport_mode" jdbcType="INTEGER" property="internalTransportMode" />
        <result column="Internal_transport_price" jdbcType="DECIMAL" property="internalTransportPrice" />
        <result column="factory_id" jdbcType="VARCHAR" property="factoryId" />
        <result column="factory_name" jdbcType="VARCHAR" property="factoryName" />
        <result column="commission_price" jdbcType="DECIMAL" property="commissionPrice" />
        <result column="documentary_type" jdbcType="INTEGER" property="documentaryType" />
        <result column="documentary_require" jdbcType="VARCHAR" property="documentaryRequire" />
        <result column="other_documentary_require" jdbcType="VARCHAR" property="otherDocumentaryRequire" />
        <result column="shipping_agent_require" jdbcType="VARCHAR" property="shippingAgentRequire" />
        <result column="package_require" jdbcType="VARCHAR" property="packageRequire" />
        <result column="goods_type" jdbcType="INTEGER" property="goodsType" />
        <result column="mianxiangqi" jdbcType="INTEGER" property="mianxiangqi" />
        <result column="miantuiqi" jdbcType="INTEGER" property="miantuiqi" />
        <result column="cupboard_type" jdbcType="INTEGER" property="cupboardType" />
        <result column="cupboard_per_number" jdbcType="INTEGER" property="cupboardPerNumber" />
        <result column="cupboard_number" jdbcType="DECIMAL" property="cupboardNumber" />
        <result column="ocean_freight" jdbcType="DECIMAL" property="oceanFreight" />
        <result column="port_surcharge" jdbcType="DECIMAL" property="portSurcharge" />
        <result column="tax_type" jdbcType="TINYINT" property="taxType" />
        <result column="tax_free" jdbcType="DECIMAL" property="taxFree" />
        <result column="gross_margin" jdbcType="DECIMAL" property="grossMargin" />
        <result column="process_cost" jdbcType="DECIMAL" property="processCost"/>
        <result column="other_cost" jdbcType="DECIMAL" property="otherCost" />
        <result column="min_price" jdbcType="DECIMAL" property="minPrice" />
        <result column="contract_price" jdbcType="DECIMAL" property="contractPrice" />
        <result column="transform_state" jdbcType="INTEGER" property="transformState" />
        <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
        <result column="create_user_name" jdbcType="VARCHAR" property="createUserName" />
        <result column="lastmodify_user_id" jdbcType="INTEGER" property="lastmodifyUserId" />
        <result column="lastmodify_user_name" jdbcType="VARCHAR" property="lastmodifyUserName" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
        <result column="unit_use_rate" jdbcType="DECIMAL" property="unitUseRate"/>
        <result column="capital_interest_price" jdbcType="DECIMAL" property="capitalInterestPrice"/>
    </resultMap>
    <select id="getBasicById" parameterClass="java.lang.Integer" resultMap="BusinessOrderProductResultMap">
        select
            *
        from business_order_product
        where id=#id#
    </select>
    <select id="getDocumentaryById" parameterClass="java.lang.Integer" resultClass="BusinessOrderProduct">
        select
            documentary_type documentaryType,
            documentary_require documentaryRequire,
            other_documentary_require otherDocumentaryRequire
        from
            business_order_product
        where id=#value#
    </select>

    <select id="getPackageRequireByOrderId" parameterClass="java.lang.String" resultMap="BusinessOrderProductResultMap">
    </select>

    <select id="getOrderProductsByOrderId" parameterClass="java.lang.String" resultClass="BusinessOrderProduct">
        SELECT
        bop.id,
        bop.order_id orderId,
        bop.product_id productId,
        bop.customer_product_name customerProductName,
        bop.`name` name,
        bop.min_price minPrice,
        bop.transform_state transformState,
        bop.contract_price contractPrice
        FROM
        business_order_product bop
        WHERE
        order_id = #orderId#
    </select>

    <select id="getPackageRequireById" parameterClass="java.lang.Integer" resultClass="BusinessOrderProduct">
        select
            shipping_agent_require shippingAgentRequire,
            package_require packageRequire,
            goods_type goodsType,
            mianxiangqi,
            miantuiqi,
            cupboard_type cupboardType,
            cupboard_per_number cupboardPerNumber,
            cupboard_number cupboardNumber,
            ocean_freight oceanFreight,
            port_surcharge portSurcharge
        from
        business_order_product
        where id=#value#
    </select>

    <insert id="insertBasic" parameterClass="BusinessOrderProduct">
        insert into business_order_product(
            order_id,archive_product_id,product_id,ware_id,customs_clearance_id,customs_clearance_name,customer_id,name,
            customer_product_name,brand,main_product_amount,main_product_unit,sub_product_amount,sub_product_unit,
            convert_rate,price_type,advise_price,purchase_price,delivery_time,factory_id,factory_name,commission_price,
            tax_type,tax_free,other_cost,create_user_id,create_user_name,lastmodify_user_id,lastmodify_user_name,create_time,modify_time,
        unit_use_rate,capital_interest_price,internal_Supply_Id,internal_Supply_name

        )
        values(
        #orderId#,#archiveProductId#,#productId#,#wareId#,#customsClearanceId#,#customsClearanceName#,#customerId#,#name#,
        #customerProductName#,#brand#,#mainProductAmount#,#mainProductUnit#,#subProductAmount#,#subProductUnit#,
        #convertRate#,#priceType#,#advisePrice#,#purchasePrice#,#deliveryTime#,#factoryId#,#factoryName#,#commissionPrice#,
        #taxType#,#taxFree#,#otherCost#,#createUserId#,#createUserName#,#createUserId#,#createUserName# ,now(),now(),
        #unitUseRate#,#capitalInterestPrice#,#internalSupplyId#,#internalSupplyName#
        )
        <selectKey resultClass="java.lang.Integer" keyProperty="id">
            SELECT @@IDENTITY AS ID
        </selectKey>
    </insert>

    <insert id="insertFromArchives" parameterClass="BusinessOrderProduct">
        insert into business_order_product (order_id, archive_product_id, product_id,
        ware_id, customs_clearance_id, customs_clearance_name, Internal_supply_id,
        Internal_supply_name, customer_id, name, customer_product_name, brand, main_product_amount,
        main_product_unit, sub_product_amount, sub_product_unit, convert_rate, price_type,
        advise_price, purchase_price, delivery_time, Internal_transport_mode,
        Internal_transport_price, factory_id, factory_name, commission_price, documentary_type,
        documentary_require, other_documentary_require, shipping_agent_require, package_require,
        goods_type, mianxiangqi, miantuiqi, cupboard_type, cupboard_per_number, cupboard_number,
        ocean_freight, port_surcharge, tax_type, tax_free, gross_margin, process_cost,other_cost, min_price,
        contract_price, transform_state, create_user_id, create_user_name, lastmodify_user_id,
        lastmodify_user_name, create_time, modify_time,unit_use_rate,capital_interest_price)

        (select
        #orderId# as order_id,#archiveProductId# as archive_product_id, product_id,
        ware_id, customs_clearance_id, customs_clearance_name, Internal_supply_id,
        Internal_supply_name, customer_id, name, customer_product_name, brand, main_product_amount,
        main_product_unit, sub_product_amount, sub_product_unit, convert_rate, price_type,
        advise_price, purchase_price, delivery_time, Internal_transport_mode,
        Internal_transport_price, factory_id, factory_name, commission_price, documentary_type,
        documentary_require, other_documentary_require, shipping_agent_require, package_require,
        goods_type, mianxiangqi, miantuiqi, cupboard_type, cupboard_per_number, cupboard_number,
        ocean_freight, port_surcharge, tax_type, tax_free, gross_margin,process_cost, other_cost, min_price,
        contract_price, 0 as transform_state, #createUserId#, #createUserName#, #createUserId#,
        #createUserName#, now(), now(),unit_use_rate,capital_interest_price
        from customer_product_archives
        where id = #archiveProductId#)
        <selectKey resultClass="java.lang.Integer" keyProperty="id">
            SELECT @@IDENTITY AS ID
        </selectKey>
    </insert>

    <update id="update" parameterClass="BusinessOrderProduct">
        update business_order_product
        <dynamic prepend="set">
            <isNotEmpty prepend="," property="orderId">
                order_id = #orderId#
            </isNotEmpty>
            <isNotEmpty prepend="," property="unitUseRate">
                unit_use_rate = #unitUseRate#
            </isNotEmpty>
            <isNotEmpty prepend="," property="capitalInterestPrice">
                capital_interest_price = #capitalInterestPrice#
            </isNotEmpty>
            <isNotEmpty prepend="," property="archiveProductId">
                archive_product_id = #archiveProductId#
            </isNotEmpty>
            <isNotEmpty prepend="," property="productId">
                product_id = #productId#
            </isNotEmpty>
            <isNotEmpty prepend="," property="wareId">
                ware_id = #wareId#
            </isNotEmpty>
            <isNotEmpty prepend="," property="customsClearanceId">
                customs_clearance_id = #customsClearanceId#
            </isNotEmpty>
            <isNotEmpty prepend="," property="customsClearanceName">
                customs_clearance_name = #customsClearanceName#
            </isNotEmpty>
            <isNotEmpty prepend="," property="customerId">
                customer_id = #customerId#
            </isNotEmpty>
            <isNotEmpty prepend="," property="name">
                name = #name#
            </isNotEmpty>
            <isNotEmpty prepend="," property="customerProductName">
                customer_product_name = #customerProductName#
            </isNotEmpty>
            <isNotEmpty prepend="," property="brand">
                brand = #brand#
            </isNotEmpty>
            <isNotEmpty prepend="," property="mainProductAmount">
                main_product_amount = #mainProductAmount#
            </isNotEmpty>
            <isNotEmpty prepend="," property="mainProductUnit">
                main_product_unit = #mainProductUnit#
            </isNotEmpty>
            <isNotEmpty prepend="," property="subProductAmount">
                sub_product_amount = #subProductAmount#
            </isNotEmpty>
            <isNotEmpty prepend="," property="subProductUnit">
                sub_product_unit = #subProductUnit#
            </isNotEmpty>
            <isNotEmpty prepend="," property="convertRate">
                convert_rate = #convertRate#
            </isNotEmpty>
            <isNotEmpty prepend="," property="priceType">
                price_type = #priceType#
            </isNotEmpty>
            <isNotEmpty prepend="," property="advisePrice">
                advise_price = #advisePrice#
            </isNotEmpty>
            <isNotEmpty prepend="," property="purchasePrice">
                purchase_price = #purchasePrice#
            </isNotEmpty>
            <isNotEmpty prepend="," property="deliveryTime">
                delivery_time = #deliveryTime#
            </isNotEmpty>
            <isNotEmpty prepend="," property="internalTransportMode">
                Internal_transport_mode = #internalTransportMode#
            </isNotEmpty>
            <isNotEmpty prepend="," property="internalTransportPrice">
                Internal_transport_price = #internalTransportPrice#
            </isNotEmpty>
            <isNotEmpty prepend="," property="factoryId">
                factory_id = #factoryId#
            </isNotEmpty>
            <isNotEmpty prepend="," property="factoryName">
                factory_name = #factoryName#
            </isNotEmpty>
            <isNotEmpty prepend="," property="commissionPrice">
                commission_price = #commissionPrice#
            </isNotEmpty>

            <isNotEmpty prepend="," property="documentaryType">
                documentary_type = #documentaryType#
            </isNotEmpty>
            <isNotEmpty prepend="," property="documentaryRequire">
                documentary_require = #documentaryRequire#
            </isNotEmpty>

            <isNotEmpty prepend="," property="internalSupplyId">
                internal_Supply_Id = #internalSupplyId#
            </isNotEmpty>
            <isNotEmpty prepend="," property="internalSupplyName">
                internal_Supply_name = #internalSupplyName#
            </isNotEmpty>
            <isNotEmpty prepend="," property="otherDocumentaryRequire">
                other_documentary_require = #otherDocumentaryRequire#
            </isNotEmpty>
            <isNotEmpty prepend="," property="shippingAgentRequire">
                shipping_agent_require = #shippingAgentRequire#
            </isNotEmpty>
            <isNotEmpty prepend="," property="packageRequire">
                package_require = #packageRequire#
            </isNotEmpty>
            <isNotEmpty prepend="," property="goodsType">
                goods_type = #goodsType#
            </isNotEmpty>
            <isNotEmpty prepend="," property="mianxiangqi">
                mianxiangqi = #mianxiangqi#
            </isNotEmpty>
            <isNotEmpty prepend="," property="miantuiqi">
                miantuiqi = #miantuiqi#
            </isNotEmpty>
            <isNotEmpty prepend="," property="cupboardType">
                cupboard_type = #cupboardType#
            </isNotEmpty>
            <isNotEmpty prepend="," property="cupboardPerNumber">
                cupboard_per_number = #cupboardPerNumber#
            </isNotEmpty>
            <isNotEmpty prepend="," property="cupboardNumber">
                cupboard_number = #cupboardNumber#
            </isNotEmpty>
            <isNotEmpty prepend="," property="oceanFreight">
                ocean_freight = #oceanFreight#
            </isNotEmpty>
            <isNotEmpty prepend="," property="portSurcharge">
                port_surcharge = #portSurcharge#
            </isNotEmpty>
            <isNotEmpty prepend="," property="taxType">
                tax_type = #taxType#
            </isNotEmpty>
            <isNotEmpty prepend="," property="taxFree">
                tax_free = #taxFree#
            </isNotEmpty>
            <isNotEmpty prepend="," property="grossMargin">
                gross_margin = #grossMargin#
            </isNotEmpty>
            <isNotEmpty prepend="," property="processCost">
                process_cost = #processCost#
            </isNotEmpty>
            <isNotEmpty prepend="," property="otherCost">
                other_cost = #otherCost#
            </isNotEmpty>
            <isNotEmpty prepend="," property="minPrice">
                min_price = #minPrice#
            </isNotEmpty>
            <isNotEmpty prepend="," property="contractPrice">
                contract_price = #contractPrice#
            </isNotEmpty>
            <isNotEmpty prepend="," property="transformState">
                transform_state = #transformState#
            </isNotEmpty>
            <isNotEmpty prepend="," property="createUserId">
                create_user_id = #createUserId#
            </isNotEmpty>
            <isNotEmpty prepend="," property="createUserName">
                create_user_name = #createUserName#
            </isNotEmpty>
            <isNotEmpty prepend="," property="lastmodifyUserId">
                lastmodify_user_id = #lastmodifyUserId#
            </isNotEmpty>
            <isNotEmpty prepend="," property="lastmodifyUserName">
                lastmodify_user_name = #lastmodifyUserName#
            </isNotEmpty>
            <isNotEmpty prepend="," property="createTime">
                create_time = #createTime#
            </isNotEmpty>
            <isNotEmpty prepend="," property="modifyTime">
                modify_time = #modifyTime#
            </isNotEmpty>
        </dynamic>
        where id = #id#
    </update>
    
    <delete id="deleteAllInfoByIds" parameterClass="java.lang.String">
        DELETE bop.*, bpr.*, bopc.*
        FROM
        `business_order_product` bop

        LEFT JOIN	`business_order_product_component` bopc ON bopc.business_product_id = bop.id
        LEFT JOIN	`business_product_require` bpr ON bpr.business_product_id = bop.id
        WHERE bop.id IN ($businessProductIds$)
    </delete>

    <select id="getPriceType" parameterClass="java.lang.Integer" resultClass="java.lang.String">
        select price_type from business_order_product where id=#businessProductId#
    </select>

    <select id="calculateProcesscost" parameterClass="java.lang.Integer" resultClass="java.math.BigDecimal">
        select sum(ifnull(cost,0)) from (
            <!-- 计算产品成分费用-->
            SELECT ifnull(SUM(p.cost),0) cost FROM `business_order_product_component` p,k_component_cost c WHERE p.business_product_id = #value#
            and p.component_id=c.component_id and c.component_name != '草甘膦原粉'
            UNION
            <!-- 计算主材费用-->
            SELECT (
            (ifnull(r.price,0)+ifnull(r.addtional_price,0))*k.consumption
            +ifnull(r.other_require_price,0)*ifnull(r.other_require_consumption,0)) cost
            FROM `business_product_require` r, k_packing_archives k
            WHERE r.business_product_id = #value# and r.main_packing_id = k.packing_id
            UNION
            <!-- 计算和外包装单耗不相同的辅材费用-->
            SELECT ifnull(SUM(k.unit_price*p.consumption),0) from k_packing_realtion p,business_product_require r,k_packing_archives k where r.business_product_id=#value# and p.main_packing_id = r.main_packing_id and is_equal_outer = 0
        AND  CONCAT(',', r.auxiliary_material_ids, ',') LIKE  CONCAT('%,', k.packing_id, ',%') and k.packing_id = p.associated_packing_id

            UNION
            <!-- 计算和外包装单耗相同的辅材费用-->
            SELECT
            ifnull(SUM(k.unit_price *
            (select k.consumption from k_packing_realtion k,business_product_require r
            where k.main_packing_id = r.main_packing_id and r.business_product_id=#value#
            and r.outer_packing_id=k.associated_packing_id and k.category_id=2)
            ),0)
            from k_packing_realtion p,business_product_require r,k_packing_archives k where r.business_product_id=#value# and p.main_packing_id = r.main_packing_id and is_equal_outer = 1
        AND  CONCAT(',', r.auxiliary_material_ids, ',') LIKE  CONCAT('%,', k.packing_id, ',%') and k.packing_id = p.associated_packing_id

            UNION
            <!-- 计算运费-->
            SELECT ifnull(unit_cost,0) FROM k_freight_cost c,business_order_product p  WHERE c.process_factory = p.factory_name and p.id=#value#
            UNION
            <!-- 制剂加工人工成本-->
            SELECT  ifnull(unit_cost,0) FROM `k_preparation_process_cost` c,business_product_require r WHERE LOWER(c.cost_term)=LOWER(r.specification) AND r.business_product_id = #value# AND c.type=0
            UNION
            <!-- 杂费-->
            SELECT  ifnull(total_cost,0) FROM `k_preparation_process_cost` c,business_order_product p  WHERE c.process_factory=p.factory_name and p.id=#value#  AND c.type=1
            ) a
    </select>


    <resultMap id="CUSTOMER-ORDER-PRODUCT-LIST-MAP" class="BusinessOrderProductList">
        <result property="orderId" column="order_id" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result property="businessProductId" column="id" jdbcType="INT" javaType="java.lang.Integer"/>
        <result property="productName" column="name" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result property="productCode" column="product_id" jdbcType="INT" javaType="java.lang.Integer"/>
        <result property="categoryName" column="category_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result property="brand" column="brand" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result property="specification" column="specification" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result property="model" column="model" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result property="mainProductAmount" column="main_product_amount" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
        <result property="cupboardPerNumber" column="cupboard_number" jdbcType="INT" javaType="java.lang.Integer" nullValue="0"/>
        <result property="cupboardNumber" column="cupboard_per_number" jdbcType="INT" javaType="java.lang.Integer" nullValue="0"/>
        <result property="cupboardType" column="cupboard_type" jdbcType="INT" javaType="java.lang.Integer" nullValue="0"/>
        <result property="deliveryTime" column="delivery_time" jdbcType="DATETIME" javaType="java.sql.Timestamp"/>
        <result property="minPrice" column="min_price" jdbcType="DECIMAL" javaType="java.math.BigDecimal" nullValue="0"/>
        <result property="customerProductName" column="customer_product_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result property="productRequireId" column="product_require_id" jdbcType="INT" javaType="java.lang.Integer"/>
        <result property="transformState" column="transform_state" jdbcType="INT" javaType="java.lang.Integer"/>
        <result property="contractPrice" column="contract_price" jdbcType="DECIMAL" javaType="java.math.BigDecimal" nullValue="0"/>
    </resultMap>

    <select id="GET-ORDER-PRODUCT-LIST" parameterClass="java.lang.String" resultMap="CUSTOMER-ORDER-PRODUCT-LIST-MAP">
        SELECT
        bop.order_id,
        bop.id,
        bpr.id product_require_id,
        bop.`name`,
        bi.product_id,
        bi.category_name,
        bop.customer_product_name,
        bop.brand,
        pw.specification,
        pw.model,
        bop.main_product_amount,
        bop.cupboard_number,
        bop.cupboard_per_number,
        bop.cupboard_type,
        bop.delivery_time,
        bop.min_price,
        bop.transform_state,
        bop.contract_price
        FROM
        business_order_product bop
        LEFT JOIN product_ware pw ON pw.ware_id = bop.ware_id
        left JOIN product_info bi ON bi.product_id = bop.product_id
        LEFT JOIN business_product_require bpr on bpr.business_product_id = bop.id
        WHERE bop.order_id = #orderId#
    </select>

</sqlMap>